 package maker_may;

import javax.swing.*;

import static java.lang.Double.parseDouble;
import static java.lang.Math.round;

class FinCheck extends JFrame {

    private double stDay, finDay, mn;
    private String strRes="";

    private final JLabel stDayL, finDayL, mnL;
    private final JTextField stDayF, finDayF, mnF;
    private final JButton calcB;

    FinCheck() {
        super("FinCheck");
        final int x = 10;
        final int y = 10;
        final int w = 110;
        final int h = 30;
        setBounds(550, 250, 260, 270);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setLayout(null);
        setResizable(false);

        stDayL = new JLabel("Reference data");
        stDayL.setBounds(x, y, w, h);
        stDayL.setBorder(BorderFactory.createEtchedBorder());


        finDayL = new JLabel("PayDay");
        finDayL.setBounds(x, y + 40, w, h);
        finDayL.setBorder(BorderFactory.createEtchedBorder());


        mnL = new JLabel("Current balance");
        mnL.setBounds(10, y + 80, w, h);
        mnL.setBorder(BorderFactory.createEtchedBorder());


        stDayF = new JTextField();
        stDayF.setBounds(x + 120, y, w, h);


        finDayF = new JTextField();
        finDayF.setBounds(x + 120, y + 40, w, h);

        mnF = new JTextField();
        mnF.setBounds(x + 120, y + 80, w, h);

        calcB = new JButton();
        calcB.setText("CALCULATE");
        calcB.setBounds(x + 120, y + 130, w, h);
        calcB.setFocusPainted(false);

        calcB.addActionListener(ae -> {
            checkCorrectStDay();
            dispose();
        });

        this.add(stDayL);
        this.add(finDayL);
        this.add(mnL);
        this.add(stDayF);
        this.add(finDayF);
        this.add(mnF);
        this.add(calcB);
        this.setVisible(true);
    }

    private void stDayFClear() {
        stDayF.selectAll();
        stDayF.replaceSelection(null);
        checkCorrectStDay();
    }

    private void finDayFClear() {
        finDayF.selectAll();
        finDayF.replaceSelection(null);
        checkCorrectFinDay();
        checkCorrectMnF();
    }

    private void mnFClear() {
        mnF.selectAll();
        mnF.replaceSelection(null);
        checkCorrectMnF();
    }



private void checkCorrectStDay() {
        try{
            stDay = parseDouble(stDayF.getText());
        }
        catch (NumberFormatException numFmtEx){
            stDayFClear();
        }
        finally{
            checkCorrectFinDay();
        }
    }


private void checkCorrectFinDay() {
       try {
           finDay = parseDouble(this.finDayF.getText());
       } catch(NumberFormatException numFmtEx){
           finDayFClear();
       }
       finally{
           checkData();
       }
    }
    

    private void checkData(){
    if(stDay<=0 || stDay>31 || finDay<=0 || finDay>31 || stDay>=finDay){
        stDayFClear();
        finDayFClear();
        }else{
            checkCorrectMnF();
        }
    }



private void checkCorrectMnF() {
       try {
           mn = parseDouble(mnF.getText());
       } catch (NumberFormatException numFmtEx){
           mnFClear();
       } finally{
           averageCheck();
       }
}

private void  averageCheck() {
        double deltaDay = finDay - stDay;
        double result = round(mn / deltaDay);
        strRes = "Max check rub/per day: " + result;
        printResult();
        }

private void printResult() {
        JOptionPane.showMessageDialog(null, strRes, "FinCheck", JOptionPane.INFORMATION_MESSAGE);
    }
}//FinCheck

public class Interface_ver3{
    public static void main(String[] args) {
        new FinCheck();
    }
}
